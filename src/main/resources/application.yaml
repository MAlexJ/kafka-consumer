server:
  port: ${APP_SERVICE_PORT:8082}

spring:
  config:
    import: optional:file:.env[.properties]

  application:
    name: ${APP_SERVICE_NAME:kafka-consumer}

  kafka:
    properties:
      sasl:
        jaas:
          config: org.apache.kafka.common.security.scram.ScramLoginModule required
            username="${CLOUD_KAFKA_USERNAME}" password="${CLOUD_KAFKA_PASSWORD}";
        mechanism: SCRAM-SHA-256
      security:
        protocol: SASL_SSL
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      auto-offset-reset: latest
      group-id: ${CLOUD_KAFKA_USERNAME}-consumers
      properties:
        spring:
          json:
            trusted:
              packages: sample.kafka
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    bootstrap-servers: ${CLOUD_KAFKA_BROKER_URL}

cloud:
  kafka:
    topic: ${CLOUD_KAFKA_USERNAME}-default

management:
  endpoints.web.exposure.include: prometheus, health
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true